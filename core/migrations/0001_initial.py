# Generated by Django 5.1.4 on 2025-01-06 15:00

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BusinessType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image_url', models.ImageField(blank=True, null=True, upload_to='business_types/')),
                ('is_active', models.BooleanField(default=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('icon_url', models.ImageField(blank=True, null=True, upload_to='business_types/')),
            ],
        ),
        migrations.CreateModel(
            name='AIRecommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('recommendation_data', models.JSONField(null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Business',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('image_url', models.ImageField(blank=True, null=True, upload_to='business/')),
                ('is_active', models.BooleanField(default=True)),
                ('slug', models.SlugField(blank=True, null=True)),
                ('icon_url', models.ImageField(blank=True, null=True, upload_to='business/')),
                ('business_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.businesstype')),
            ],
        ),
        migrations.CreateModel(
            name='ChatRoom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('room_status', models.CharField(choices=[('Active', 'Active'), ('Closed', 'Closed'), ('Archived', 'Archived')], default='Active', max_length=50)),
                ('room_type', models.CharField(choices=[('Customer', 'Customer'), ('Vendor', 'Vendor'), ('Admin', 'Admin')], default='Customer', max_length=50)),
                ('admin_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.adminprofile')),
                ('user_id1', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.vendorprofile')),
                ('user_id2', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.customerprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('location', models.TextField(blank=True, null=True)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('price', models.FloatField(default=0.0)),
                ('currency', models.CharField(choices=[('INR', 'INR'), ('USD', 'USD'), ('EUR', 'EUR'), ('GBP', 'GBP'), ('AUD', 'AUD'), ('CAD', 'CAD'), ('JPY', 'JPY'), ('RUB', 'RUB'), ('KRW', 'KRW'), ('CHF', 'CHF'), ('BRL', 'BRL'), ('CNY', 'CNY'), ('HKD', 'HKD'), ('MXN', 'MXN'), ('NZD', 'NZD'), ('PHP', 'PHP'), ('SGD', 'SGD'), ('THB', 'THB'), ('TRY', 'TRY'), ('VND', 'VND'), ('ZAR', 'ZAR'), ('PKR', 'PKR'), ('AED', 'AED')], default='PKR', max_length=3)),
                ('image_url', models.ImageField(blank=True, null=True, upload_to='event/')),
                ('guest_count', models.IntegerField(default=0)),
                ('budget', models.FloatField(default=0.0)),
                ('status', models.CharField(choices=[('Draft', 'Draft'), ('Confirmed', 'Confirmed'), ('Completed', 'Completed'), ('Cancelled', 'Cancelled')], default='Draft', max_length=50)),
                ('maximum_capacity', models.IntegerField(blank=True, null=True)),
                ('minimum_capacity', models.IntegerField(blank=True, null=True)),
                ('business', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.business')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.customerprofile')),
            ],
        ),
        migrations.CreateModel(
            name='EventService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
                ('price', models.FloatField(default=0.0)),
                ('currency', models.CharField(choices=[('INR', 'INR'), ('USD', 'USD'), ('EUR', 'EUR'), ('GBP', 'GBP'), ('AUD', 'AUD'), ('CAD', 'CAD'), ('JPY', 'JPY'), ('RUB', 'RUB'), ('KRW', 'KRW'), ('CHF', 'CHF'), ('BRL', 'BRL'), ('CNY', 'CNY'), ('HKD', 'HKD'), ('MXN', 'MXN'), ('NZD', 'NZD'), ('PHP', 'PHP'), ('SGD', 'SGD'), ('THB', 'THB'), ('TRY', 'TRY'), ('VND', 'VND'), ('ZAR', 'ZAR'), ('PKR', 'PKR'), ('AED', 'AED')], default='PKR', max_length=3)),
                ('status', models.CharField(choices=[('Pending', 'Pending'), ('Confirmed', 'Confirmed'), ('Cancelled', 'Cancelled')], default='Pending', max_length=50)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.event')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.vendorprofile')),
            ],
        ),
        migrations.CreateModel(
            name='EventMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('media_file', models.FileField(blank=True, null=True, upload_to='event_media/')),
                ('media_type', models.CharField(choices=[('Image', 'Image'), ('Video', 'Video')], default='Image', max_length=50)),
                ('uploaded_at', models.DateTimeField(blank=True, null=True)),
                ('event_service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.eventservice')),
            ],
        ),
        migrations.CreateModel(
            name='Messages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('message_content', models.TextField(blank=True, null=True)),
                ('message_type', models.CharField(choices=[('Text', 'Text'), ('Image', 'Image'), ('Video', 'Video'), ('Audio', 'Audio'), ('File', 'File')], default='Text', max_length=50)),
                ('attachment_url', models.URLField(blank=True, help_text='URL for the attached file or media.', null=True)),
                ('sent_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('read_at', models.DateTimeField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False, help_text='Indicates if the message has been read.')),
                ('is_deleted', models.BooleanField(default=False, help_text='Indicates if the message has been deleted.')),
                ('is_urgent', models.BooleanField(default=False, help_text='Marks if the message is urgent.')),
                ('delivery_status', models.CharField(choices=[('Sent', 'Sent'), ('Delivered', 'Delivered'), ('Read', 'Read')], default='Sent', help_text='Status of the message delivery.', max_length=20)),
                ('parent_message', models.ForeignKey(blank=True, help_text='Reference to the parent message in case of replies.', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='core.messages')),
                ('receiver_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.chatroom')),
                ('sender_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('title', models.CharField(max_length=100)),
                ('message', models.TextField(blank=True, null=True)),
                ('is_read', models.BooleanField(default=False)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(blank=True, default=True)),
                ('price', models.FloatField(default=0.0)),
                ('currency', models.CharField(choices=[('INR', 'INR'), ('USD', 'USD'), ('EUR', 'EUR'), ('GBP', 'GBP'), ('AUD', 'AUD'), ('CAD', 'CAD'), ('JPY', 'JPY'), ('RUB', 'RUB'), ('KRW', 'KRW'), ('CHF', 'CHF'), ('BRL', 'BRL'), ('CNY', 'CNY'), ('HKD', 'HKD'), ('MXN', 'MXN'), ('NZD', 'NZD'), ('PHP', 'PHP'), ('SGD', 'SGD'), ('THB', 'THB'), ('TRY', 'TRY'), ('VND', 'VND'), ('ZAR', 'ZAR'), ('PKR', 'PKR'), ('AED', 'AED')], default='PKR', max_length=3)),
                ('business', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.business')),
                ('vendor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.vendorprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('rating', models.FloatField(default=0)),
                ('comment', models.TextField(blank=True, null=True)),
                ('event', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('vendor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='account.vendorprofile')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.service')),
            ],
        ),
        migrations.AddField(
            model_name='eventservice',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.service'),
        ),
    ]
